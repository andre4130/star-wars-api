{"version":3,"sources":["Components/Login/Login.jsx","Components/MainPage/MainPage.jsx","Components/CharacterDetail/CharacterDetail.jsx","Components/Characters/Characters.jsx","Components/Register/Register.jsx","App.js","serviceWorker.js","index.js","assets/images/milky2.jpg"],"names":["required","value","className","role","Login","props","form","useRef","checkBtn","useState","username","setUsername","password","setPassword","loading","setLoading","message","setMessage","ref","onChange","e","preventDefault","current","validateAll","context","_errors","length","console","log","htmlFor","type","name","placeholder","target","validations","to","disabled","style","display","MainPage","setError","setIsLoaded","spaceships","setSpaceships","currentPage","setCurrentPage","goToNext","goToPrev","a","fetch","then","res","json","data","results","error","useEffect","fetchFunction","shipList","map","ship","index","Card","key","bg","text","Body","Title","Text","model","manufacturer","Container","Button","onClick","variant","CardColumns","CharacterDetail","characterID","id","setData","response","catch","Header","window","location","pathname","Characters","characters","setCharacters","goToPage","num","charactersList","character","height","mass","gender","url","validEmail","isEmail","vusername","vpassword","Register","email","setEmail","successful","setSuccessful","onSubmit","alert","App","exact","path","component","Navbar","Brand","href","Nav","Link","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7a959f9e.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Link } from 'react-router-dom'\n\n//Styling\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\n\nconst required = (value) => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger m-2\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\nconst Login = (props) => {\n\n    const form = useRef();\n    const checkBtn = useRef();\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [message, setMessage] = useState(\"\");\n\n    const onChangeUsername = (e) => {\n        const username = e.target.value;\n        setUsername(username);\n    };\n\n    const onChangePassword = (e) => {\n        const password = e.target.value;\n        setPassword(password);\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        setMessage(\"\");\n        setLoading(true);\n\n        form.current.validateAll();\n\n        if (checkBtn.current.context._errors.length === 0) {\n            console.log(\"no errors!\")\n        } else {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"col-md-12 login\">\n            <div className=\"card card-container m-2 p-3\">\n                <Form ref={form} onChange={handleLogin}>\n                    <div className=\"\">\n                        <label htmlFor=\"username\">Username</label>\n                        <Input\n                            type=\"text\"\n                            name=\"username\"\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={onChangeUsername}\n                            validations={[required]}\n                        />\n                    </div>\n                    <div className=\"pt-3\">\n                        <label htmlFor=\"email\">Email</label>\n                        <Input\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={onChangePassword}\n                            validations={[required]}\n                        />\n                    </div>\n                    <div className=\"form-group pt-3\">\n                        <Link to=\"/MainPage\">\n                            <button className=\"btn btn-primary btn-block\" disabled={!loading}>\n                                <span>Login</span>\n                            </button>\n                        </Link>\n                    </div>\n                    <div className=\"form-group\">\n                        <Link to=\"/Register\">\n                            <button className=\"btn btn-primary btn-block\" >\n                                <span>Register</span>\n                            </button>\n                        </Link>\n                    </div>\n                    {message && (\n                        <div className=\"form-group\">\n                            <div className=\"alert alert-danger\" role=\"alert\">\n                                {message}\n                            </div>\n                        </div>\n                    )}\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n                </Form>\n            </div>\n        </div>\n    );\n}\n\nexport default Login","import React, { useState, useEffect } from 'react';\n\n//STYLING\nimport '../../App.css'\nimport { Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nfunction MainPage() {\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [spaceships, setSpaceships] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const goToNext = () => (\n        setCurrentPage(currentPage + 1)\n    );\n\n    const goToPrev = () => (\n        setCurrentPage(currentPage - 1)\n    );\n\n\n    //this is the inital fetch, the dependency is an empty array, which means it will only fetch when the page is loaded\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/starships/?page=1\")\n            .then(res => res.json())\n            .then(\n                data => {\n                    setSpaceships(data.results);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                    console.log(\"error!\", error)\n                }\n            )\n    }, []);\n\n\n    //Fetch Function will fetch the server everytime the user changes the page\n    async function fetchFunction() {\n        await fetch(\"https://swapi.dev/api/starships/?page=\" + currentPage)\n            .then(res => res.json())\n            .then(\n                data => {\n                    setSpaceships(data.results);\n                    // setNextPage(data.next);\n                    // setPrevPage(data.previous);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                    console.log(\"error!\")\n                }\n            )\n    }\n\n    //Every time the user changes the page, the API is fetched to the corresponding fetch\n    useEffect(() => {\n        console.log(\"in use effect\", currentPage, spaceships);\n        fetchFunction();\n    }, [currentPage]);\n\n    const shipList = spaceships.map((ship, index) => (\n        <Card key={index} bg=\"dark\" text=\"white\">\n            <Card.Body>\n                <Card.Title><h3>{ship.name}</h3></Card.Title>\n                <Card.Text>\n                    <b>Model:</b> {ship.model}\n                </Card.Text>\n                <Card.Text>\n                    <b>Manufacturer:</b> {ship.manufacturer}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    ))\n\n    return (\n        <Container className=\"MainPage mt-3\">\n            <div>\n                {currentPage === 1 ? <Button className=\"m-1 secondary\" onClick={() => goToPrev()} disabled> Previous Page </Button> : <Button className=\"m-1 secondary\" onClick={() => goToPrev()}> Previous Page </Button>}\n                <Button className=\"m-1\" variant=\"dark\"  > {currentPage} </Button>\n                {currentPage === 4 ? <Button className=\"m-1 secondary\" onClick={() => goToNext()} disabled> Next Page </Button> : <Button className=\"m-1 secondary\" onClick={() => goToNext()}> Next Page </Button>}\n            </div>\n            <hr />\n            <Container>\n                <CardColumns>\n                    {shipList}\n                </CardColumns>\n            </Container>\n        </Container>\n    )\n}\nexport default MainPage\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//Styling \r\nimport { Button, Card } from 'react-bootstrap';\r\n\r\nconst CharacterDetail = ({ id }) => {\r\n\r\n    const characterID = id\r\n\r\n    console.log(characterID)\r\n\r\n    const [data, setData] = useState();\r\n\r\n    //Fetched data from the API. the only open point is to receive the props from the parent component\r\n    useEffect(() => {\r\n        fetch(\"http://swapi.dev/api/people/1/\")\r\n            .then((res) => res.json())\r\n            .then((response) => {\r\n                console.log(response)\r\n                setData(response);\r\n            })\r\n            .catch((error) => console.log(error));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <Card bg=\"dark\" text=\"white\">\r\n                <Card.Header> <h1>{window.location.pathname}</h1> </Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title > Card Title </Card.Title>\r\n                    <Card.Text>\r\n                        Here it would be the rest of the information inside the card\r\n      </Card.Text>\r\n                    <div className=\"linkButton\">\r\n                        <Link to=\"/Characters\">\r\n                            <Button>\r\n                                Back to Characters\r\n                    </Button>\r\n                        </Link>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default CharacterDetail","import React, { useState, useEffect } from 'react';\nimport { Route, Redirect, Link } from 'react-router-dom';\n\n//STYLING\nimport '../../App.css'\nimport { Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport CharacterDetail from '../CharacterDetail/CharacterDetail';\n\n\nfunction Characters() {\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [characters, setCharacters] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const goToNext = () => (\n        setCurrentPage(currentPage + 1)\n    );\n    const goToPrev = () => (\n        setCurrentPage(currentPage - 1)\n    );\n\n    const goToPage = (num) => (\n        setCurrentPage(num)\n    );\n\n    useEffect(() => {\n        fetch(\"https://swapi.dev/api/people/?page=1\")\n            .then(res => res.json())\n            .then(\n                data => {\n                    setCharacters(data.results);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                    console.log(\"error!\", error)\n                }\n            )\n    }, []);\n\n    //Fetch Function will fetch the server everytime the user changes the page\n    async function fetchFunction() {\n        await fetch(\"https://swapi.dev/api/people/?page=\" + currentPage)\n            .then(res => res.json())\n            .then(\n                data => {\n                    setCharacters(data.results);\n                    // setNextPage(data.next);\n                    // setPrevPage(data.previous);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                    console.log(\"error!\")\n                }\n            )\n    }\n\n    useEffect(() => {\n        console.log(\"in use effect\", currentPage, characters);\n        fetchFunction();\n    }, [currentPage]);\n\n    const charactersList = characters.map((character, index) => (\n        <Card id={index} bg=\"dark\" text=\"white\">\n            <Card.Body>\n                <Card.Title><h3>{character.name}</h3></Card.Title>\n                <Card.Text>\n                    <b>Height:</b> {character.height}\n                </Card.Text>\n                <Card.Text>\n                    <b>Mass:</b> {character.mass}\n                </Card.Text>\n                <Card.Text>\n                    <b>Grender:</b> {character.gender}\n                </Card.Text>\n                <Link to={`/people/${character.name}`} id={character.url}>\n                    <Button type=\"button\" id={character.url}>\n                        See Details\n                </Button>\n                </Link>\n            </Card.Body>\n        </Card>\n    ))\n\n    return (\n        <Container className=\"CharacterPage mt-3\">\n            {currentPage === 1 ? <Button className=\"mr-1\" onClick={() => goToPrev()} disabled> Previous Page </Button> : <Button className=\"mr-1\" onClick={() => goToPrev()}> Previous Page </Button>}\n            {currentPage === 1 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(1)} > 1 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(1)} > 1 </Button>}\n            {currentPage === 2 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(2)} > 2 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(2)} > 2 </Button>}\n            {currentPage === 3 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(3)} > 3 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(3)} > 3 </Button>}\n            {currentPage === 4 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(4)} > 4 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(4)} > 4 </Button>}\n            {currentPage === 5 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(5)} > 5 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(5)} > 5 </Button>}\n            {currentPage === 6 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(6)} > 6 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(6)} > 6 </Button>}\n            {currentPage === 7 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(7)} > 7 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(7)} > 7 </Button>}\n            {currentPage === 8 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(8)} > 8 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(8)} > 8 </Button>}\n            {currentPage === 9 ? <Button className=\"mr-1 ml-1\" variant=\"secondary\" onClick={() => goToPage(9)} > 9 </Button> : <Button className=\"mr-1 ml-1\" variant=\"primary\" onClick={() => goToPage(9)} > 9 </Button>}\n            {currentPage === 9 ? <Button className=\"ml-1\" onClick={() => goToNext()} disabled> Next Page </Button> : <Button className=\"ml-1\" onClick={() => goToNext()}> Next Page </Button>}\n            <hr />\n            <Container>\n                <CardColumns>\n                    {charactersList}\n                </CardColumns>\n            </Container>\n        </Container>\n    )\n}\n\nexport default Characters\n","import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { Link } from 'react-router-dom';\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      alert(\"Registration was successful\")\n    }\n  };\n\n  return (\n    <div className=\"register\">\n      <div className=\"card card-container m-2 p-3\">\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n              <div className=\"form-group\">\n                        <Link to=\"/\">\n                            <button className=\"btn btn-warning btn-block\">\n                                <span>Login</span>\n                            </button>\n                        </Link>\n                    </div>\n            </div>\n          )}\n          {message && (\n            <div className=\"form-group\">\n              <div\n                className={successful ? \"alert alert-success\" : \"alert alert-danger\"}\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn}>\n          </CheckButton>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport '../src/assets/images/milky2.jpg'\n\n// components\nimport Login from './Components/Login/Login';\nimport MainPage from './Components/MainPage/MainPage';\nimport Characters from './Components/Characters/Characters';\nimport Register from './Components/Register/Register';\nimport CharacterDetail from './Components/CharacterDetail/CharacterDetail';\n\n//Styles\nimport { Navbar, Nav } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nconst App = () => {\n\n  const LoginContainer = () => (\n    <div>\n      <Route path=\"/\" component={Login} />\n    </div>\n  );\n\n  const RegisterContainer = () => (\n    <div>\n      <Route exact path=\"/Register\" component={Register} />\n    </div>\n  );\n\n  const DefaultContainer = () => (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/MainPage\"></Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Logout</Nav.Link>\n          <Nav.Link href=\"/MainPage\">Spaceships</Nav.Link>\n          <Nav.Link href=\"/Characters\">Characters</Nav.Link>\n        </Nav>\n      </Navbar>\n      <Router>\n        <Switch>\n          <Route exact path=\"/MainPage\" component={MainPage} />\n          <Route exact path=\"/Characters\" component={Characters} />\n          <Route path=\"/people/:characterID\" component={CharacterDetail} />\n        </Switch>\n      </Router>\n    </div>\n  )\n\n  return (\n    <Router>\n      <Switch>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={LoginContainer} />\n          <Route exact path=\"/Register\" component={RegisterContainer}/>\n          <Route component={DefaultContainer} />\n        </div>\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/milky2.1ff95a95.jpg\";"],"sourceRoot":""}